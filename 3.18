(define (detect-cycle x)
  (let ((pair-set '()))
    (define (do-detect x)
      (cond ((null? x)
	     false)
	    ((memq x pair-set)
	     true)
	    (else
	     (set! pair-set (cons x pair-set))
		 (do-detect (cdr x)))))

    (do-detect x)))
;Value: detect-cycle

(define p1 (list 't))
;Value: p1

(detect-cycle (cons p1 p1))

