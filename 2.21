(define (square-list items)
  (if (null? items)
      items
      (cons (square (car items))
	    (square-list (cdr items)))))
;Value: square-list

(define (square-list items)
  (map (lambda (x) (* x x)) items))
;Value: square-list

(square-list (list 1 2 3 4 5))
;Value 28: (1 4 9 16 25)

